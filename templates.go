// Do not edit. Automatically generated from templates.go.erb
package main

import (
	"encoding/base64"
	"fmt"
	"text/template"
)

func pkPlaceholder(n int) string {
	return fmt.Sprintf("$%d", n+1)
}

func loadTemplates() *template.Template {
	funcMap := template.FuncMap{"pkPlaceholder": pkPlaceholder}
	templates := template.New("base").Funcs(funcMap)

	var decoded []byte
	var err error

	decoded, err = base64.StdEncoding.DecodeString(``)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`attribute`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`cGFja2FnZSA9ICJ7ey5Qa2dOYW1lfX0iCgojIERhdGFiYXNlIGNvbm5lY3Rpb24gaW5mb3JtYXRpb24gY2FuIGJlIHNwZWNpZmllZCBoZXJlIG9yIGluIFBHKiBlbnZpcm9ubWVudCB2YXJpYWJsZXMKIwojIFtkYXRhYmFzZV0KIyBob3N0ID0gIjEyNy4wLjAuMSIKIyBwb3J0ID0gNTQzMgojIGRhdGFiYXNlID0gIm15YXBwX2RldmVsb3BtZW50IgojIHVzZXIgPSAibXl1c2VyIgojIHBhc3N3b3JkID0gInNlY3JldCIKCltbdGFibGVzXV0KdGFibGVfbmFtZSA9ICJjdXN0b21lciIKIyBzdHJ1Y3RfbmFtZSA9ICJDdXN0b21lciIK`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`config`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBDb3VudHt7LlN0cnVjdE5hbWV9fShkYiBRdWVyeWVyKSAoaW50NjQsIGVycm9yKSB7CiAgdmFyIG4gaW50NjQKICBzcWwgOj0gYHNlbGVjdCBjb3VudCgqKSBmcm9tICJ7ey5UYWJsZU5hbWV9fSJgCiAgZXJyIDo9IGRiLlF1ZXJ5Um93KHNxbCkuU2NhbigmbikKICByZXR1cm4gbiwgZXJyCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`count_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`Ly8gVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLgpwYWNrYWdlIHt7LlBrZ05hbWV9fQoKaW1wb3J0ICgKICAiZXJyb3JzIgoKICAiZ2l0aHViLmNvbS9qYWNrYy9wZ3giCikKCmNvbnN0IFBHWERBVEFfVkVSU0lPTiA9ICJ7ey5WZXJzaW9ufX0iCgp2YXIgRXJyTm90Rm91bmQgPSBlcnJvcnMuTmV3KCJub3QgZm91bmQiKQoKdHlwZSBRdWVyeWVyIGludGVyZmFjZSB7CiAgUXVlcnkoc3FsIHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKCpwZ3guUm93cywgZXJyb3IpCiAgUXVlcnlSb3coc3FsIHN0cmluZywgYXJncyAuLi5pbnRlcmZhY2V7fSkgKnBneC5Sb3cKICBFeGVjKHNxbCBzdHJpbmcsIGFyZ3VtZW50cyAuLi5pbnRlcmZhY2V7fSkgKHBneC5Db21tYW5kVGFnLCBlcnJvcikKfQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`db`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBEZWxldGV7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllcnt7cmFuZ2UgLlByaW1hcnlLZXlDb2x1bW5zfX0sCiAge3suVmFyTmFtZX19IHt7LkdvVHlwZX19e3tlbmR9fSwKKSBlcnJvciB7CiAgYXJncyA6PSBwZ3guUXVlcnlBcmdzKG1ha2UoW11pbnRlcmZhY2V7fSwgMCwge3tsZW4gLlByaW1hcnlLZXlDb2x1bW5zfX0pKQoKICBzcWwgOj0gYGRlbGV0ZSBmcm9tICJ7ey5UYWJsZU5hbWV9fSIgd2hlcmUgYCB7eyByYW5nZSAkaSwgJGNvbHVtbiA6PSAuUHJpbWFyeUtleUNvbHVtbnN9fSArIGB7e2lmICRpfX0gYW5kIHt7ZW5kfX0ie3skY29sdW1uLkNvbHVtbk5hbWV9fSI9YCArIGFyZ3MuQXBwZW5kKHt7JGNvbHVtbi5WYXJOYW1lfX0pe3tlbmR9fQoKICBjb21tYW5kVGFnLCBlcnIgOj0gZGIuRXhlYyhzcWwsIGFyZ3MuLi4pCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQogIGlmIGNvbW1hbmRUYWcuUm93c0FmZmVjdGVkKCkgIT0gMSB7CiAgICByZXR1cm4gcGd4LkVyck5vUm93cwogIH0KICByZXR1cm4gbmlsCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`delete_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBJbnNlcnR7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllciwgcm93ICp7ey5TdHJ1Y3ROYW1lfX0pIGVycm9yIHsKICBhcmdzIDo9IHBneC5RdWVyeUFyZ3MobWFrZShbXWludGVyZmFjZXt9LCAwLCB7e2xlbiAuQ29sdW1uc319KSkKCiAgdmFyIGNvbHVtbnMsIHZhbHVlcyBbXXN0cmluZwoKe3tyYW5nZSAuQ29sdW1uc319ICByb3cue3suRmllbGROYW1lfX0uYWRkSW5zZXJ0KGB7ey5Db2x1bW5OYW1lfX1gLCAmY29sdW1ucywgJnZhbHVlcywgJmFyZ3MpCnt7ZW5kfX0KCiAgc3FsIDo9IGBpbnNlcnQgaW50byAie3suVGFibGVOYW1lfX0iKGAgKyBzdHJpbmdzLkpvaW4oY29sdW1ucywgIiwgIikgKyBgKQp2YWx1ZXMoYCArIHN0cmluZ3MuSm9pbih2YWx1ZXMsICIsIikgKyBgKQpyZXR1cm5pbmcge3sgcmFuZ2UgJGksICRjb2x1bW4gOj0gLlByaW1hcnlLZXlDb2x1bW5zfX17e2lmICRpfX0sIHt7ZW5kfX0ie3skY29sdW1uLkNvbHVtbk5hbWV9fSJ7e2VuZH19CiAgYAoKICByZXR1cm4gZGIuUXVlcnlSb3coc3FsLCBhcmdzLi4uKS5TY2FuKHt7IHJhbmdlICRpLCAkY29sdW1uIDo9IC5QcmltYXJ5S2V5Q29sdW1uc319e3tpZiAkaX19LCB7e2VuZH19JnJvdy57eyRjb2x1bW4uRmllbGROYW1lfX17e2VuZH19KQp9Cg==`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`insert_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`Ly8gVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLgpwYWNrYWdlIHt7LlBrZ05hbWV9fQoKaW1wb3J0ICgKICAic3RyaW5ncyIKCiAgImdpdGh1Yi5jb20vamFja2MvcGd4IgopCgp0eXBlIHt7LlN0cnVjdE5hbWV9fSBzdHJ1Y3Qgewp7e3JhbmdlIC5Db2x1bW5zfX0gIHt7LkZpZWxkTmFtZX19IHt7LkdvQm94VHlwZX19Cnt7ZW5kfX19Cgp7e3RlbXBsYXRlICJjb3VudF9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAic2VsZWN0X2FsbF9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAic2VsZWN0X2J5X3BrX2Z1bmMiIC59fQp7e3RlbXBsYXRlICJpbnNlcnRfZnVuYyIgLn19Cnt7dGVtcGxhdGUgInVwZGF0ZV9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAiZGVsZXRlX2Z1bmMiIC59fQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`row`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBTZWxlY3RBbGx7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllcikgKFtde3suU3RydWN0TmFtZX19LCBlcnJvcikgewogIHNxbCA6PSBgc2VsZWN0e3sgcmFuZ2UgJGksICRjb2x1bW4gOj0gLkNvbHVtbnN9fXt7aWYgJGl9fSx7e2VuZH19CiAgInt7JGNvbHVtbi5Db2x1bW5OYW1lfX0ie3tlbmR9fQpmcm9tICJ7ey5UYWJsZU5hbWV9fSJgCgogIHZhciByb3dzIFtde3suU3RydWN0TmFtZX19CgogIGRiUm93cywgZXJyIDo9IGRiLlF1ZXJ5KHNxbCkKICBpZiBlcnIgIT0gbmlsIHsKICAgIHJldHVybiBuaWwsIGVycgogIH0KCiAgZm9yIGRiUm93cy5OZXh0KCkgewogICAgdmFyIHJvdyB7ey5TdHJ1Y3ROYW1lfX0KICAgIGRiUm93cy5TY2FuKAp7e3JhbmdlIC5Db2x1bW5zfX0mcm93Lnt7LkZpZWxkTmFtZX19LAogICAge3tlbmR9fSkKICAgIHJvd3MgPSBhcHBlbmQocm93cywgcm93KQogIH0KCiAgaWYgZGJSb3dzLkVycigpICE9IG5pbCB7CiAgICByZXR1cm4gbmlsLCBkYlJvd3MuRXJyKCkKICB9CgogIHJldHVybiByb3dzLCBuaWwKfQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`select_all_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBTZWxlY3R7ey5TdHJ1Y3ROYW1lfX1CeVBLKAogIGRiIFF1ZXJ5ZXJ7e3JhbmdlIC5QcmltYXJ5S2V5Q29sdW1uc319LAogIHt7LlZhck5hbWV9fSB7ey5Hb1R5cGV9fXt7ZW5kfX0sCikgKCp7ey5TdHJ1Y3ROYW1lfX0sIGVycm9yKSB7CiAgc3FsIDo9IGBzZWxlY3R7eyByYW5nZSAkaSwgJGNvbHVtbiA6PSAuQ29sdW1uc319e3tpZiAkaX19LHt7ZW5kfX0KICAie3skY29sdW1uLkNvbHVtbk5hbWV9fSJ7e2VuZH19CmZyb20gInt7LlRhYmxlTmFtZX19Igp3aGVyZSB7eyByYW5nZSAkaSwgJGNvbHVtbiA6PSAuUHJpbWFyeUtleUNvbHVtbnN9fXt7aWYgJGl9fSBhbmQge3tlbmR9fSJ7eyRjb2x1bW4uQ29sdW1uTmFtZX19Ij17e3BrUGxhY2Vob2xkZXIgJGl9fXt7ZW5kfX1gCgogIHZhciByb3cge3suU3RydWN0TmFtZX19CiAgZXJyIDo9IGRiLlF1ZXJ5Um93KHNxbCB7e3JhbmdlIC5QcmltYXJ5S2V5Q29sdW1uc319LCB7ey5WYXJOYW1lfX17e2VuZH19KS5TY2FuKAp7e3JhbmdlIC5Db2x1bW5zfX0mcm93Lnt7LkZpZWxkTmFtZX19LAogICAge3tlbmR9fSkKICBpZiBlcnIgPT0gcGd4LkVyck5vUm93cyB7CiAgICByZXR1cm4gbmlsLCBFcnJOb3RGb3VuZAogIH0gZWxzZSBpZiBlcnIgIT0gbmlsIHsKICAgIHJldHVybiBuaWwsIGVycgogIH0KCiAgcmV0dXJuICZyb3csIG5pbAp9Cg==`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`select_by_pk_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBVcGRhdGV7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllcnt7cmFuZ2UgLlByaW1hcnlLZXlDb2x1bW5zfX0sCiAge3suVmFyTmFtZX19IHt7LkdvVHlwZX19e3tlbmR9fSwKICByb3cgKnt7LlN0cnVjdE5hbWV9fSwKKSBlcnJvciB7CiAgc2V0cyA6PSBtYWtlKFtdc3RyaW5nLCAwLCB7e2xlbiAuQ29sdW1uc319KQogIGFyZ3MgOj0gcGd4LlF1ZXJ5QXJncyhtYWtlKFtdaW50ZXJmYWNle30sIDAsIHt7bGVuIC5Db2x1bW5zfX0pKQoKe3tyYW5nZSAuQ29sdW1uc319ICByb3cue3suRmllbGROYW1lfX0uYWRkVXBkYXRlKGB7ey5Db2x1bW5OYW1lfX1gLCAmc2V0cywgJmFyZ3MpCnt7ZW5kfX0KCiAgaWYgbGVuKHNldHMpID09IDAgewogICAgcmV0dXJuIG5pbAogIH0KCiAgc3FsIDo9IGB1cGRhdGUgInt7LlRhYmxlTmFtZX19IiBzZXQgYCArIHN0cmluZ3MuSm9pbihzZXRzLCAiLCAiKSArIGAgd2hlcmUgYCB7eyByYW5nZSAkaSwgJGNvbHVtbiA6PSAuUHJpbWFyeUtleUNvbHVtbnN9fSArIGB7e2lmICRpfX0gYW5kIHt7ZW5kfX0ie3skY29sdW1uLkNvbHVtbk5hbWV9fSI9YCArIGFyZ3MuQXBwZW5kKHt7JGNvbHVtbi5WYXJOYW1lfX0pe3tlbmR9fQoKICBjb21tYW5kVGFnLCBlcnIgOj0gZGIuRXhlYyhzcWwsIGFyZ3MuLi4pCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQogIGlmIGNvbW1hbmRUYWcuUm93c0FmZmVjdGVkKCkgIT0gMSB7CiAgICByZXR1cm4gcGd4LkVyck5vUm93cwogIH0KICByZXR1cm4gbmlsCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`update_func`).Parse(string(decoded))
	if err != nil {
		fmt.Println(string(decoded))
		panic("Unable to parse template")
	}

	return templates
}
