// Do not edit. Automatically generated from templates.go.erb
package main

import (
	"encoding/base64"
	"text/template"
)

func loadTemplates() *template.Template {
	templates := template.New("base")

	var decoded []byte
	var err error

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBEZWxldGV7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllciwgaWQgaW50MzIpIGVycm9yIHsKICBzcWwgOj0gYGRlbGV0ZSBmcm9tICJ7ey5UYWJsZU5hbWV9fSIgd2hlcmUgaWQ9JDFgCgogIGNvbW1hbmRUYWcsIGVyciA6PSBkYi5FeGVjKHNxbCwgaWQpCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQogIGlmIGNvbW1hbmRUYWcuUm93c0FmZmVjdGVkKCkgIT0gMSB7CiAgICByZXR1cm4gcGd4LkVyck5vUm93cwogIH0KICByZXR1cm4gbmlsCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`delete_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`Ly8gVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLgpwYWNrYWdlIHt7LlBrZ05hbWV9fQoKaW1wb3J0ICgKICAiZW5jb2RpbmcvanNvbiIKICAiZXJyb3JzIgogICJmbXQiCiAgInN0cmNvbnYiCiAgInRpbWUiCgogICJnaXRodWIuY29tL2phY2tjL3BneCIKKQoKY29uc3QgKAogIFVuZGVmaW5lZCA9IGlvdGEKICBOdWxsICAgICAgPSBpb3RhCiAgUHJlc2VudCAgID0gaW90YQopCgp7e3JhbmdlIC5Cb3hUeXBlc319CnR5cGUge3suTmFtZX19IHN0cnVjdCB7CiAgVmFsdWUgIHt7LlZhbHVlVHlwZX19CiAgU3RhdHVzIGJ5dGUKfQoKZnVuYyAoYXR0ciB7ey5OYW1lfX0pIFN0cmluZygpIHN0cmluZyB7CiAgc3dpdGNoIGF0dHIuU3RhdHVzIHsKICBjYXNlIFByZXNlbnQ6CiAgICByZXR1cm4gZm10LlNwcmludGYoIiV2IiwgYXR0ci5WYWx1ZSkKICBjYXNlIE51bGw6CiAgICByZXR1cm4gIm51bGwiCiAgY2FzZSBVbmRlZmluZWQ6CiAgICByZXR1cm4gInVuZGVmaW5lZCIKICB9CgogIHBhbmljKCJ1bnJlYWNoYWJsZSIpCn0KCmZ1bmMgKGF0dHIge3suTmFtZX19KSBhZGRVcGRhdGUoY29sdW1uTmFtZSBzdHJpbmcsIHNldHMgKltdc3RyaW5nLCBhcmdzICpwZ3guUXVlcnlBcmdzKSB7CiAgc3dpdGNoIGF0dHIuU3RhdHVzIHsKICAgIGNhc2UgUHJlc2VudDoKICAgICAgKnNldHMgPSBhcHBlbmQoKnNldHMsIGNvbHVtbk5hbWUrIj0iK2FyZ3MuQXBwZW5kKGF0dHIuVmFsdWUpKQogICAgY2FzZSBOdWxsOgogICAgICAqc2V0cyA9IGFwcGVuZCgqc2V0cywgY29sdW1uTmFtZSsiPSIrYXJncy5BcHBlbmQobmlsKSkKICB9Cn0KCmZ1bmMgKGF0dHIge3suTmFtZX19KSBhZGRJbnNlcnQoY29sdW1uTmFtZSBzdHJpbmcsIHNldHMsIHZhbHVlcyAqW11zdHJpbmcsIGFyZ3MgKnBneC5RdWVyeUFyZ3MpIHsKICBzd2l0Y2ggYXR0ci5TdGF0dXMgewogICAgY2FzZSBQcmVzZW50OgogICAgICAqc2V0cyA9IGFwcGVuZCgqc2V0cywgY29sdW1uTmFtZSkKICAgICAgKnZhbHVlcyA9IGFwcGVuZCgqdmFsdWVzLCBhcmdzLkFwcGVuZChhdHRyLlZhbHVlKSkKICAgIGNhc2UgTnVsbDoKICAgICAgKnNldHMgPSBhcHBlbmQoKnNldHMsIGNvbHVtbk5hbWUpCiAgICAgICp2YWx1ZXMgPSBhcHBlbmQoKnZhbHVlcywgYXJncy5BcHBlbmQobmlsKSkKICB9Cn0KCmZ1bmMgKGF0dHIgKnt7Lk5hbWV9fSkgU2NhbihyICpwZ3guVmFsdWVSZWFkZXIpIGVycm9yIHsKICB2YXIgbnYgcGd4Lk51bGx7ey5OYW1lfX0KICBlcnIgOj0gbnYuU2NhbihyKQogIGlmIGVyciAhPSBuaWwgewogICAgcmV0dXJuIGVycgogIH0KCiAgYXR0ci5WYWx1ZSA9IG52Lnt7Lk5hbWV9fQogIGlmIG52LlZhbGlkIHsKICAgIGF0dHIuU3RhdHVzID0gUHJlc2VudAogIH0gZWxzZSB7CiAgICBhdHRyLlN0YXR1cyA9IE51bGwKICB9CgogIHJldHVybiBuaWwKfQoKCmZ1bmMgKGF0dHIge3suTmFtZX19KSBGb3JtYXRDb2RlKCkgaW50MTYgewogIHZhciBudiBwZ3guTnVsbHt7Lk5hbWV9fQogIHJldHVybiBudi5Gb3JtYXRDb2RlKCkKfQoKZnVuYyAoYXR0ciB7ey5OYW1lfX0pIEVuY29kZSh3ICpwZ3guV3JpdGVCdWYsIG9pZCBwZ3guT2lkKSBlcnJvciB7CiAgdmFyIG52IHBneC5OdWxse3suTmFtZX19CiAgbnYue3suTmFtZX19ID0gYXR0ci5WYWx1ZQoKICBzd2l0Y2ggYXR0ci5TdGF0dXMgewogIGNhc2UgUHJlc2VudDoKICAgIG52LlZhbGlkID0gdHJ1ZQogIGNhc2UgTnVsbDoKICAgIG52LlZhbGlkID0gZmFsc2UKICBjYXNlIFVuZGVmaW5lZDoKICAgIHJldHVybiBlcnJvcnMuTmV3KCJjYW5ub3QgZW5jb2RlIHVuZGVmaW5lZCBhdHRyIikKICB9CgogIHJldHVybiBudi5FbmNvZGUodywgb2lkKQp9Cnt7ZW5kfX0KCnR5cGUgQnl0ZXMgc3RydWN0IHsKICBWYWx1ZSAgW11ieXRlCiAgU3RhdHVzIGJ5dGUKfQoKZnVuYyAoYXR0ciAqQnl0ZXMpIGFkZFVwZGF0ZShjb2x1bW5OYW1lIHN0cmluZywgc2V0cyAqW11zdHJpbmcsIGFyZ3MgKnBneC5RdWVyeUFyZ3MpIHsKICBzd2l0Y2ggYXR0ci5TdGF0dXMgewogICAgY2FzZSBQcmVzZW50OgogICAgICAqc2V0cyA9IGFwcGVuZCgqc2V0cywgY29sdW1uTmFtZSsiPSIrYXJncy5BcHBlbmQoYXR0ci5WYWx1ZSkpCiAgICBjYXNlIE51bGw6CiAgICAgICpzZXRzID0gYXBwZW5kKCpzZXRzLCBjb2x1bW5OYW1lKyI9IithcmdzLkFwcGVuZChuaWwpKQogIH0KfQoKZnVuYyAoYXR0ciAqQnl0ZXMpIFNjYW4odnIgKnBneC5WYWx1ZVJlYWRlcikgZXJyb3IgewogIGlmIHZyLkxlbigpID09IC0xIHsKICAgIGF0dHIuVmFsdWUgPSBuaWwKICAgIGF0dHIuU3RhdHVzID0gTnVsbAogICAgcmV0dXJuIG5pbAogIH0KCiAgYXR0ci5WYWx1ZSA9IHZyLlJlYWRCeXRlcyh2ci5MZW4oKSkKICBhdHRyLlN0YXR1cyA9IFByZXNlbnQKICByZXR1cm4gdnIuRXJyKCkKfQoKCmZ1bmMgKGF0dHIgQnl0ZXMpIEZvcm1hdENvZGUoKSBpbnQxNiB7CiAgcmV0dXJuIHBneC5CaW5hcnlGb3JtYXRDb2RlCn0KCmZ1bmMgKGF0dHIgQnl0ZXMpIEVuY29kZSh3ICpwZ3guV3JpdGVCdWYsIG9pZCBwZ3guT2lkKSBlcnJvciB7CiAgaWYgb2lkICE9IHBneC5CeXRlYU9pZCB7CiAgICByZXR1cm4gcGd4LlNlcmlhbGl6YXRpb25FcnJvcihmbXQuU3ByaW50ZigiQnl0ZXMuRW5jb2RlIGNhbm5vdCBlbmNvZGUgaW50byBPSUQgJWQiLCBvaWQpKQogIH0KCiAgaWYgYXR0ci5TdGF0dXMgIT0gUHJlc2VudCB7CiAgICB3LldyaXRlSW50MzIoLTEpCiAgICByZXR1cm4gbmlsCiAgfQoKICB3LldyaXRlQnl0ZXMoYXR0ci5WYWx1ZSkKICByZXR1cm4gbmlsCn0KCgpmdW5jIChhdHRyIEJvb2wpIE1hcnNoYWxKU09OKCkgKFtdYnl0ZSwgZXJyb3IpIHsKICBpZiBhdHRyLlN0YXR1cyAhPSBQcmVzZW50IHsKICAgIHJldHVybiBbXWJ5dGUoIm51bGwiKSwgbmlsCiAgfQogIGlmIGF0dHIuVmFsdWUgewogICAgcmV0dXJuIFtdYnl0ZSgidHJ1ZSIpLCBuaWwKICB9CiAgcmV0dXJuIFtdYnl0ZSgiZmFsc2UiKSwgbmlsCn0KCmZ1bmMgKGF0dHIgKkJvb2wpIFVubWFyc2hhbEpTT04oYnZhbCBbXWJ5dGUpIGVycm9yIHsKICBzdmFsIDo9IHN0cmluZyhidmFsKQoKICBzd2l0Y2ggc3ZhbCB7CiAgY2FzZSAidHJ1ZSI6CiAgICBhdHRyLlZhbHVlID0gdHJ1ZQogICAgYXR0ci5TdGF0dXMgPSBQcmVzZW50CiAgY2FzZSAiZmFsc2UiOgogICAgYXR0ci5WYWx1ZSA9IGZhbHNlCiAgICBhdHRyLlN0YXR1cyA9IFByZXNlbnQKICBjYXNlICJudWxsIjoKICAgIGF0dHIuU3RhdHVzID0gTnVsbAogIGRlZmF1bHQ6CiAgICByZXR1cm4gZXJyb3JzLk5ldygidW5rbm93biBCb29sIHZhbHVlIikKICB9CgogIHJldHVybiBuaWwKfQoKCnt7cmFuZ2UgLkludEJveFR5cGVzfX0KZnVuYyAoYXR0ciB7ey5OYW1lfX0pIE1hcnNoYWxKU09OKCkgKFtdYnl0ZSwgZXJyb3IpIHsKICBpZiBhdHRyLlN0YXR1cyAhPSBQcmVzZW50IHsKICAgIHJldHVybiBbXWJ5dGUoIm51bGwiKSwgbmlsCiAgfQogIHJldHVybiBbXWJ5dGUoc3RyY29udi5Gb3JtYXRJbnQoaW50NjQoYXR0ci5WYWx1ZSksIDEwKSksIG5pbAp9CgpmdW5jIChhdHRyICp7ey5OYW1lfX0pIFVubWFyc2hhbEpTT04oYnZhbCBbXWJ5dGUpIGVycm9yIHsKICBzdmFsIDo9IHN0cmluZyhidmFsKQoKICBpZiBzdmFsID09ICJudWxsIiB7CiAgICBhdHRyLlN0YXR1cyA9IE51bGwKICAgIHJldHVybiBuaWwKICB9CgogIG52YWwsIGVyciA6PSBzdHJjb252LlBhcnNlSW50KHN2YWwsIDEwLCB7ey5CaXRTaXplfX0pCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQoKICBhdHRyLlZhbHVlID0gaW50e3suQml0U2l6ZX19KG52YWwpCiAgYXR0ci5TdGF0dXMgPSBQcmVzZW50CgogIHJldHVybiBuaWwKfQp7e2VuZH19CgpmdW5jIChhdHRyIFN0cmluZykgTWFyc2hhbEpTT04oKSAoW11ieXRlLCBlcnJvcikgewogIGlmIGF0dHIuU3RhdHVzICE9IFByZXNlbnQgewogICAgcmV0dXJuIFtdYnl0ZSgibnVsbCIpLCBuaWwKICB9CgogIHJldHVybiBqc29uLk1hcnNoYWwoYXR0ci5WYWx1ZSkKfQoKZnVuYyAoYXR0ciAqU3RyaW5nKSBVbm1hcnNoYWxKU09OKGJ2YWwgW11ieXRlKSBlcnJvciB7CiAgc3ZhbCA6PSBzdHJpbmcoYnZhbCkKCiAgaWYgc3ZhbCA9PSAibnVsbCIgewogICAgYXR0ci5TdGF0dXMgPSBOdWxsCiAgICByZXR1cm4gbmlsCiAgfQoKICBlcnIgOj0ganNvbi5Vbm1hcnNoYWwoYnZhbCwgJmF0dHIuVmFsdWUpCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQoKICBhdHRyLlN0YXR1cyA9IFByZXNlbnQKICByZXR1cm4gbmlsCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`attribute`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBJbnNlcnR7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllciwgcm93ICp7ey5TdHJ1Y3ROYW1lfX0pIGVycm9yIHsKICBhcmdzIDo9IHBneC5RdWVyeUFyZ3MobWFrZShbXWludGVyZmFjZXt9LCAwLCB7e2xlbiAuQ29sdW1uc319KSkKCiAgdmFyIGNvbHVtbnMsIHZhbHVlcyBbXXN0cmluZwoKe3tyYW5nZSAuQ29sdW1uc319ICByb3cue3suRmllbGROYW1lfX0uYWRkSW5zZXJ0KGB7ey5Db2x1bW5OYW1lfX1gLCAmY29sdW1ucywgJnZhbHVlcywgJmFyZ3MpCnt7ZW5kfX0KCiAgc3FsIDo9IGBpbnNlcnQgaW50byAie3suVGFibGVOYW1lfX0iKGAgKyBzdHJpbmdzLkpvaW4oY29sdW1ucywgIiwgIikgKyBgKQp2YWx1ZXMoYCArIHN0cmluZ3MuSm9pbih2YWx1ZXMsICIsIikgKyBgKQpyZXR1cm5pbmcgaWQKICBgCgogIHJldHVybiBkYi5RdWVyeVJvdyhzcWwsIGFyZ3MuLi4pLlNjYW4oJnJvdy5JRCkKfQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`insert_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBVcGRhdGV7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllciwgaWQgaW50MzIsIHJvdyAqe3suU3RydWN0TmFtZX19KSBlcnJvciB7CiAgc2V0cyA6PSBtYWtlKFtdc3RyaW5nLCAwLCB7e2xlbiAuQ29sdW1uc319KQogIGFyZ3MgOj0gcGd4LlF1ZXJ5QXJncyhtYWtlKFtdaW50ZXJmYWNle30sIDAsIHt7bGVuIC5Db2x1bW5zfX0pKQoKe3tyYW5nZSAuQ29sdW1uc319ICByb3cue3suRmllbGROYW1lfX0uYWRkVXBkYXRlKGB7ey5Db2x1bW5OYW1lfX1gLCAmc2V0cywgJmFyZ3MpCnt7ZW5kfX0KCiAgaWYgbGVuKHNldHMpID09IDAgewogICAgcmV0dXJuIG5pbAogIH0KCiAgc3FsIDo9IGB1cGRhdGUgInt7LlRhYmxlTmFtZX19IiBzZXQgYCArIHN0cmluZ3MuSm9pbihzZXRzLCAiLCAiKSArIGAgd2hlcmUgaWQ9YCArIGFyZ3MuQXBwZW5kKGlkKQoKICBjb21tYW5kVGFnLCBlcnIgOj0gZGIuRXhlYyhzcWwsIGFyZ3MuLi4pCiAgaWYgZXJyICE9IG5pbCB7CiAgICByZXR1cm4gZXJyCiAgfQogIGlmIGNvbW1hbmRUYWcuUm93c0FmZmVjdGVkKCkgIT0gMSB7CiAgICByZXR1cm4gcGd4LkVyck5vUm93cwogIH0KICByZXR1cm4gbmlsCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`update_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`cGFja2FnZSA9ICJ7ey5Qa2dOYW1lfX0iCgojIERhdGFiYXNlIGNvbm5lY3Rpb24gaW5mb3JtYXRpb24gY2FuIGJlIHNwZWNpZmllZCBoZXJlIG9yIGluIFBHKiBlbnZpcm9ubWVudCB2YXJpYWJsZXMKIwojIFtkYXRhYmFzZV0KIyBob3N0ID0gIjEyNy4wLjAuMSIKIyBwb3J0ID0gNTQzMgojIGRhdGFiYXNlID0gIm15YXBwX2RldmVsb3BtZW50IgojIHVzZXIgPSAibXl1c2VyIgojIHBhc3N3b3JkID0gInNlY3JldCIKCltbdGFibGVzXV0KdGFibGVfbmFtZSA9ICJjdXN0b21lciIKIyBzdHJ1Y3RfbmFtZSA9ICJDdXN0b21lciIK`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`config`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBDb3VudHt7LlN0cnVjdE5hbWV9fShkYiBRdWVyeWVyKSAoaW50NjQsIGVycm9yKSB7CiAgdmFyIG4gaW50NjQKICBzcWwgOj0gYHNlbGVjdCBjb3VudCgqKSBmcm9tICJ7ey5UYWJsZU5hbWV9fSJgCiAgZXJyIDo9IGRiLlF1ZXJ5Um93KHNxbCkuU2NhbigmbikKICByZXR1cm4gbiwgZXJyCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`count_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`Ly8gVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLgpwYWNrYWdlIHt7LlBrZ05hbWV9fQoKaW1wb3J0ICgKICAic3RyaW5ncyIKCiAgImdpdGh1Yi5jb20vamFja2MvcGd4IgopCgp0eXBlIHt7LlN0cnVjdE5hbWV9fSBzdHJ1Y3Qgewp7e3JhbmdlIC5Db2x1bW5zfX0gIHt7LkZpZWxkTmFtZX19IHt7LkdvVHlwZX19Cnt7ZW5kfX19Cgp7e3RlbXBsYXRlICJjb3VudF9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAic2VsZWN0X2FsbF9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAic2VsZWN0X2J5X2lkX2Z1bmMiIC59fQp7e3RlbXBsYXRlICJpbnNlcnRfZnVuYyIgLn19Cnt7dGVtcGxhdGUgInVwZGF0ZV9mdW5jIiAufX0Ke3t0ZW1wbGF0ZSAiZGVsZXRlX2Z1bmMiIC59fQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`row`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBTZWxlY3R7ey5TdHJ1Y3ROYW1lfX1CeUlEKGRiIFF1ZXJ5ZXIsIGlkIGludDMyKSAoKnt7LlN0cnVjdE5hbWV9fSwgZXJyb3IpIHsKICBzcWwgOj0gYHNlbGVjdHt7IHJhbmdlICRpLCAkY29sdW1uIDo9IC5Db2x1bW5zfX17e2lmICRpfX0se3tlbmR9fQogICJ7eyRjb2x1bW4uQ29sdW1uTmFtZX19Int7ZW5kfX0KZnJvbSAie3suVGFibGVOYW1lfX0iCndoZXJlIGlkPSQxYAoKICB2YXIgcm93IHt7LlN0cnVjdE5hbWV9fQogIGVyciA6PSBkYi5RdWVyeVJvdyhzcWwsIGlkKS5TY2FuKAp7e3JhbmdlIC5Db2x1bW5zfX0mcm93Lnt7LkZpZWxkTmFtZX19LAogICAge3tlbmR9fSkKICBpZiBlcnIgPT0gcGd4LkVyck5vUm93cyB7CiAgICByZXR1cm4gbmlsLCBFcnJOb3RGb3VuZAogIH0gZWxzZSBpZiBlcnIgIT0gbmlsIHsKICAgIHJldHVybiBuaWwsIGVycgogIH0KCiAgcmV0dXJuICZyb3csIG5pbAp9Cg==`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`select_by_id_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`Ly8gVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLgpwYWNrYWdlIHt7LlBrZ05hbWV9fQoKaW1wb3J0ICgKICAiZXJyb3JzIgoKICAiZ2l0aHViLmNvbS9qYWNrYy9wZ3giCikKCmNvbnN0IFZFUlNJT04gPSAie3suVmVyc2lvbn19IgoKdmFyIEVyck5vdEZvdW5kID0gZXJyb3JzLk5ldygibm90IGZvdW5kIikKCnR5cGUgUXVlcnllciBpbnRlcmZhY2UgewogIFF1ZXJ5KHNxbCBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pICgqcGd4LlJvd3MsIGVycm9yKQogIFF1ZXJ5Um93KHNxbCBzdHJpbmcsIGFyZ3MgLi4uaW50ZXJmYWNle30pICpwZ3guUm93CiAgRXhlYyhzcWwgc3RyaW5nLCBhcmd1bWVudHMgLi4uaW50ZXJmYWNle30pIChwZ3guQ29tbWFuZFRhZywgZXJyb3IpCn0K`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`db`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	decoded, err = base64.StdEncoding.DecodeString(`ZnVuYyBTZWxlY3RBbGx7ey5TdHJ1Y3ROYW1lfX0oZGIgUXVlcnllcikgKFtde3suU3RydWN0TmFtZX19LCBlcnJvcikgewogIHNxbCA6PSBgc2VsZWN0e3sgcmFuZ2UgJGksICRjb2x1bW4gOj0gLkNvbHVtbnN9fXt7aWYgJGl9fSx7e2VuZH19CiAgInt7JGNvbHVtbi5Db2x1bW5OYW1lfX0ie3tlbmR9fQpmcm9tICJ7ey5UYWJsZU5hbWV9fSJgCgogIHZhciByb3dzIFtde3suU3RydWN0TmFtZX19CgogIGRiUm93cywgZXJyIDo9IGRiLlF1ZXJ5KHNxbCkKICBpZiBlcnIgIT0gbmlsIHsKICAgIHJldHVybiBuaWwsIGVycgogIH0KCiAgZm9yIGRiUm93cy5OZXh0KCkgewogICAgdmFyIHJvdyB7ey5TdHJ1Y3ROYW1lfX0KICAgIGRiUm93cy5TY2FuKAp7e3JhbmdlIC5Db2x1bW5zfX0mcm93Lnt7LkZpZWxkTmFtZX19LAogICAge3tlbmR9fSkKICAgIHJvd3MgPSBhcHBlbmQocm93cywgcm93KQogIH0KCiAgaWYgZGJSb3dzLkVycigpICE9IG5pbCB7CiAgICByZXR1cm4gbmlsLCBkYlJvd3MuRXJyKCkKICB9CgogIHJldHVybiByb3dzLCBuaWwKfQo=`)
	if err != nil {
		panic("Unable to decode template")
	}

	_, err = templates.New(`select_all_func`).Parse(string(decoded))
	if err != nil {
		panic("Unable to parse template")
	}

	return templates
}
