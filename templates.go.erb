package main

import (
	"encoding/base64"
	"fmt"
	"text/template"
)

func pkPlaceholder(n int) string {
	return fmt.Sprintf("$%d", n+1)
}

func loadTemplates() *template.Template {
	funcMap := template.FuncMap{"pkPlaceholder": pkPlaceholder}
	templates := template.New("base").Funcs(funcMap)

	var decoded []byte
	var err error

	<% templates.each do |name, content| %>
		decoded, err = base64.StdEncoding.DecodeString(`<%= Base64.strict_encode64(content) %>`)
		if err != nil {
			panic("Unable to decode template")
		}

		_, err = templates.New(`<%= name %>`).Parse(string(decoded))
		if err != nil {
			fmt.Println(string(decoded))
			panic("Unable to parse template")
		}
	<% end %>

	return templates
}
